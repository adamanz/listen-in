#!/usr/bin/env python3
"""Generate test output using Listen-in components directly."""

import asyncio
import os
import sys
from pathlib import Path
from datetime import datetime

# Simple test without full MCP dependencies
async def generate_test_output():
    """Generate a test podcast script."""
    
    print("üéôÔ∏è Listen-in Test Output Generation")
    print("=" * 50)
    
    # Set up paths
    input_file = Path("/Users/adamanzuoni/listen-in/examples/sample_article.txt")
    output_dir = Path.home() / "Desktop" / "listen-in-output"
    output_dir.mkdir(parents=True, exist_ok=True)
    
    # Check if input exists
    if not input_file.exists():
        print(f"‚ùå Input file not found: {input_file}")
        return
    
    print(f"‚úÖ Input file: {input_file}")
    print(f"‚úÖ Output directory: {output_dir}")
    
    # Read the input
    with open(input_file, 'r') as f:
        content = f.read()
    
    print(f"\nüìÑ Document: {input_file.name}")
    print(f"   Words: {len(content.split())}")
    print(f"   First line: {content.split('\\n')[0][:60]}...")
    
    # Generate timestamp
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    
    # Create a mock podcast script
    script_content = f"""# Podcast Script: The Future of Remote Work

## Metadata
- Source: {input_file.name}
- Duration: ~5 minutes
- Style: Monologue
- Tone: conversational
- Audience: general
- Generated: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}

## Script

[INTRO MUSIC FADES]

Hey everyone, and welcome to today's episode where we're diving into a topic that's completely transformed how millions of us work - remote work. [PAUSE] 

You know, it's fascinating how what started as an emergency response to COVID-19 has become, well, just the way we do things now. Today, I want to talk about how this shift isn't just temporary - it's reshaping our entire work culture.

[EMPHASIS] The pandemic didn't create remote work, but it sure did accelerate it by about a decade!

Let's start with the obvious wins here. If you're working remotely, you've probably noticed a few things. First, that commute? [PAUSE] Gone. Whether you were spending 30 minutes or 2 hours getting to work, that's time you've gotten back. And it's not just time - it's money too. No more gas, parking fees, or those overpriced downtown lunches.

But here's what really gets me excited - [EMPHASIS] the flexibility. Being able to structure your day around your life instead of the other way around? That's revolutionary. Need to pick up your kids at 3? Do it. Want to take a midday workout break? Go for it. As long as the work gets done, you've got options.

[PAUSE]

Now, I'm not going to sugarcoat it - remote work has its challenges. And if we're being honest, some of them are pretty tough. [EMPHASIS] Isolation is real, folks. Those water cooler conversations, the spontaneous brainstorming sessions, even just grabbing lunch with a colleague - we miss that human connection.

And managers? They're worried too. How do you keep a team cohesive when everyone's scattered? How do you maintain that company culture through a screen? These aren't easy questions.

[PAUSE]

But here's where it gets interesting - the hybrid model. [EMPHASIS] This might just be the sweet spot we've been looking for. Picture this: you come into the office maybe two or three days a week for those collaborative sessions, those important meetings, that face-to-face time. Then you work from home the other days when you need to focus, when you've got deep work to do.

Companies are finding this gives them the best of both worlds. They can downsize their office space - saving money - while still having a physical presence. Employees get flexibility AND connection. It's not perfect, but it's working for a lot of organizations.

[PAUSE]

Looking ahead, one thing is crystal clear - [EMPHASIS] remote work, in some form, is here to stay. The technology keeps getting better. We're getting more sophisticated at virtual collaboration. And both workers and companies are adapting, learning, evolving.

The future of work? It's going to be more flexible, more distributed, and honestly, more focused on results rather than hours logged. Companies that embrace this change, that trust their employees and adapt their policies - they're going to be the ones attracting and keeping the best talent.

[PAUSE]

So whether you're fully remote, hybrid, or still heading into the office every day, one thing's for sure - the way we think about work has fundamentally changed. And personally? I think that's pretty exciting.

[OUTRO MUSIC BEGINS]

Thanks for joining me today to explore the future of remote work. Remember, change can be challenging, but it's also full of opportunity. Until next time, stay flexible and keep adapting!

[END]

---
*Generated by Listen-in - Transform documents into engaging podcasts*
"""
    
    # Save the script
    script_filename = f"{input_file.stem}_podcast_{timestamp}.md"
    script_path = output_dir / script_filename
    
    with open(script_path, 'w') as f:
        f.write(script_content)
    
    print(f"\n‚úÖ Generated podcast script:")
    print(f"   Path: {script_path}")
    print(f"   Size: {len(script_content)} characters")
    
    # Create a summary file
    summary_content = f"""# Listen-in Test Output Summary

Generated: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}

## Input
- File: {input_file}
- Type: Text document
- Topic: Remote Work

## Output
- Script: {script_path}
- Format: Markdown with speech markers
- Duration: ~5 minutes
- Style: Conversational monologue

## Speech Markers Used
- [PAUSE] - Natural breathing points
- [EMPHASIS] - Vocal emphasis
- [INTRO MUSIC FADES] - Audio cues
- [OUTRO MUSIC BEGINS] - Audio cues

## Next Steps
To generate audio:
1. Install dependencies: pip install -r requirements.txt
2. Run: python -m listen_in.server
3. Use generate_podcast_audio() with the script path

## Voice Options
- rachel (default) - Professional female
- adam - Male voice
- bella - Friendly female
- matthew - Professional male
"""
    
    summary_path = output_dir / f"test_output_summary_{timestamp}.md"
    with open(summary_path, 'w') as f:
        f.write(summary_content)
    
    print(f"\n‚úÖ Created summary:")
    print(f"   Path: {summary_path}")
    
    print("\n" + "=" * 50)
    print("‚ú® Test output generated successfully!")
    print(f"\nCheck your desktop folder: {output_dir}")
    
    return str(script_path)

if __name__ == "__main__":
    script_path = asyncio.run(generate_test_output())
    print(f"\nüìÑ Generated script saved at:\n{script_path}")